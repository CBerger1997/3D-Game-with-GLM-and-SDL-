#version 430 core

in vec3 vNormalV;
in vec3 eyeSpaceLightPosV;
in vec3 eyeSpaceVertPosV;
in vec2 texCoord;

uniform vec3 lightColour = {1.0f, 1.0f, 1.0f};
uniform float alpha = 1.0f;

out vec4 fragColour;

uniform sampler2D tex;


void main()
{
	vec3 lightDir = normalize( eyeSpaceLightPosV - eyeSpaceVertPosV );

	vec3 normal = normalize( vNormalV );

	vec3 reflectDir = reflect(-lightDir, normal);

	//Set ambient lighting

	float ambient = 0.3f;

	vec3 ambientColour = (lightColour * ambient);

	//set diffuse lighting

	float diffuse = max(dot(normal, lightDir), 0.0f);

	vec3 diffuseColour = (lightColour * diffuse);

	//set specular lighting

	float specular = pow(max(dot(lightDir, reflectDir), 0.0f), 32);

	float specularStrength = 0.5f;

	vec3 specularColour = (specularStrength * specular * lightColour);

	vec3 eyeDir = normalize( -eyeSpaceVertPosV );

	vec3 halfVec = normalize( eyeDir + lightDir );

	vec3 texColour = vec3(texture(tex,texCoord));

	fragColour = vec4( texColour*(ambientColour + diffuseColour + specularColour), alpha);
}
